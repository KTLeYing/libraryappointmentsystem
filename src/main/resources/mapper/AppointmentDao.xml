<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mzl.appointmentsystem.dao.AppointmentDao">

    <!--一对多，一个学生可以预约多本书-->
    <resultMap id="BaseResultMap" type="com.mzl.appointmentsystem.entity.Appointment">
        <id property="appoiId" column="appoiId"/>
        <result property="bookId" column="bookId"/>
        <result property="studentId" column="studentId"/>
        <result property="appointTime" column="appointTime"/>
        <association property="book" javaType="com.mzl.appointmentsystem.entity.Book">
            <id property="bookId" column="bookId1"/>
            <result property="bookName" column="bookName"/>
            <result property="number" column="number"/>
            <result property="introd" column="introd"/>
        </association>
    </resultMap>

    <!--执行预约操作-->
    <insert id="insertAppointment">
        insert into appointment(bookId, studentId, appointTime)
        values(#{bookId}, #{studentId}, curdate())
    </insert>

    <!--通过id查询学生的自己预约的图书-->
    <select id="queryAndReturn" resultMap="BaseResultMap" parameterType="int">
        <!-- 如何告诉MyBatis把结果映射到Appointment同时映射book属性 -->
        <!-- 可以自由控制SQL -->
        select a.bookId, a.studentId, a.appointTime, b.bookId bookId1, b.bookName bookName, b.introd introd, b.number number
        from appointment a inner join book b on a.bookId = b.bookId
        where a.studentId = #{studentId}
    </select>

</mapper>